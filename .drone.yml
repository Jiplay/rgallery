---
kind: pipeline
type: docker
name: push

platform:
  os: linux
  arch: amd64

steps:
  - name: prettier
    image: node:20.18.3-alpine3.21
    commands:
      - apk add make
      - npm i -g prettier@3.6.2
      - make npm prettier-test

  - name: lint
    image: golang:1.24.0-alpine3.21
    commands:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - apk add make git curl jq gcc g++
      - make lint

  - name: test
    image: golang:1.24.0-alpine3.21
    volumes:
      - name: deps
        path: /usr/local/go
    commands:
      - apk add make git exiftool ffmpeg gcc g++
      - make test
    depends_on:
      - prettier

  - name: build
    image: golang:1.24.0-bookworm
    volumes:
      - name: deps
        path: /usr/local/go
    commands:
      - apt-get update && apt-get install -y make build-essential git
      - make build
    depends_on:
      - prettier

  - name: build-assets
    image: node:20.18.3-alpine3.21
    volumes:
      - name: deps
        path: /usr/local/go
    commands:
      - apk add make
      - npm ci
      - make assets
    depends_on:
      - prettier

trigger:
  event:
    - push

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: deps
    temp: {}

---
kind: pipeline
type: docker
name: tag

platform:
  os: linux
  arch: amd64

steps:
  - name: fetch
    image: alpine/git
    commands:
      - git fetch --tags

  - name: prettier
    image: node:20.18.3-alpine3.21
    commands:
      - apk add make
      - npm i -g prettier
      - make npm prettier-test

  - name: lint
    image: golang:1.24.0-alpine3.21
    commands:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - apk add make git curl jq gcc g++
      - make lint

  - name: test
    image: golang:1.24.0-alpine3.21
    volumes:
      - name: deps
        path: /usr/local/go
    commands:
      - apk add make git exiftool ffmpeg gcc g++
      - make test

  - name: build-push-rgallery
    image: robbymilo/drone-docker-buildx
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    settings:
      dockerfile: cmd/rgallery/Dockerfile
      platforms:
        - linux/arm64
        - linux/amd64
      repo: robbymilo/rgallery
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - ${DRONE_COMMIT_SHA}
        - ${DRONE_TAG}
        - latest
    depends_on:
      - test
      - lint
      - fetch

  - name: build-push-rgallery-resize
    image: robbymilo/drone-docker-buildx
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    settings:
      dockerfile: cmd/rgallery-resize/Dockerfile
      platforms:
        - linux/arm64
        - linux/amd64
      repo: robbymilo/rgallery
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - resize-${DRONE_COMMIT_SHA}
        - resize-${DRONE_TAG}
        - resize-latest
    depends_on:
      - test
      - lint
      - fetch
  - name: build-push-rgallery-geo
    image: robbymilo/drone-docker-buildx
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    settings:
      dockerfile: cmd/rgallery-geo/Dockerfile
      platforms:
        - linux/arm64
        - linux/amd64
      repo: robbymilo/rgallery
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - geo-${DRONE_COMMIT_SHA}
        - geo-${DRONE_TAG}
        - geo-latest
    depends_on:
      - test
      - lint
      - fetch
  - name: update-deployments
    image: robbymilo/git-updater:latest
    settings:
      github_user: milorobot
      github_email: milorobot@fastmail.com
      config_json: |-
        {
          "destination_branch": "master",
          "repo_owner": "robbymilo",
          "repo_name": "deployments",
          "update_jsonnet_attribute_configs": [
            {
              "file_path": "environments/eu-vetrno-0/rgallery/images.libsonnet",
              "jsonnet_key": "rgallery",
              "jsonnet_value": "robbymilo/rgallery:${DRONE_TAG}"
            },
            {
              "file_path": "environments/eu-vetrno-0/rgallery/images.libsonnet",
              "jsonnet_key": "rgallery_resize",
              "jsonnet_value": "robbymilo/rgallery:resize-${DRONE_TAG}"
            },
            {
              "file_path": "environments/eu-vetrno-0/rgallery/images.libsonnet",
              "jsonnet_key": "rgallery_geo",
              "jsonnet_value": "robbymilo/rgallery:geo-${DRONE_TAG}"
            },
            {
              "file_path": "environments/eu-fsn-0/rgallery/images.libsonnet",
              "jsonnet_key": "rgallery",
              "jsonnet_value": "robbymilo/rgallery:${DRONE_TAG}"
            }
          ]
        }
      github_token:
        from_secret: github_token
    depends_on:
      - build-push-rgallery
      - build-push-rgallery-resize
      - build-push-rgallery-geo

  - name: build-frontend
    image: node:20.18.3-alpine3.21
    commands:
      - apk add make
      - make npm assets
    depends_on:
      - prettier
      - lint
      - test

  - name: build-binaries
    image: golang:1.24.0-bookworm
    commands:
      - apt-get update && apt-get install -y make build-essential git
      - make build TARGETOS=linux TARGETARCH=amd64
      - make build TARGETOS=linux TARGETARCH=arm64
      - make build TARGETOS=darwin TARGETARCH=arm64
    depends_on:
      - build-frontend

  - name: publish-release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files: bin/*
      title: ${DRONE_TAG}
    depends_on:
      - build-binaries

trigger:
  event:
    - tag

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: deps
    temp: {}
---
kind: pipeline
type: docker
name: website

platform:
  os: linux
  arch: amd64

steps:
  - name: fetch
    image: alpine/git
    commands:
      - git fetch --tags

  - name: build-container
    image: docker
    environment:
      DOCKER_BUILDKIT: 1
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build . -f website/Dockerfile -t rgallery-website:latest --build-arg HUGO_VERSION=$(cat website/.hvm | tr -d 'v')
    depends_on:
      - fetch

  - name: build-website
    image: rgallery-website:latest
    pull: if-not-exists
    environment:
      SHA: ${DRONE_COMMIT_SHA:0:7}
    commands:
      - make website
    depends_on:
      - build-container

  - name: deploy-production
    image: rgallery-website:latest
    pull: if-not-exists
    environment:
      TOKEN:
        from_secret: netlify_auth_token
    commands:
      - netlify deploy --dir website/public --site 1c96423e-1f71-4f16-9d9c-967aae8feed2 --auth $TOKEN --prod
    when:
      ref:
        - refs/heads/main
        - refs/tags/v*
    depends_on:
      - build-website

trigger:
  event:
    - push
    - tag

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: deps
    temp: {}
